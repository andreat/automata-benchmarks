Return-Path: <Peter.Habermehl@liafa.jussieu.fr>
Received: from eva.fit.vutbr.cz (eva.fit.vutbr.cz [147.229.10.14])
	by kazi.fit.vutbr.cz (8.12.10/8.12.9) with ESMTP id h9OD4kQp015524
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=OK)
	for <vojnar@kazi.fit.vutbr.cz>; Fri, 24 Oct 2003 15:04:46 +0200 (CEST)
Received: from shiva.jussieu.fr (shiva.jussieu.fr [134.157.0.129])
	by eva.fit.vutbr.cz (8.12.10/8.12.9) with ESMTP id h9OD4hPW033799
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <vojnar@dcse.fee.vutbr.cz>; Fri, 24 Oct 2003 15:04:44 +0200 (CEST)
Received: from liafa1.liafa.jussieu.fr (liafa1.liafa.jussieu.fr [132.227.93.1])
          by shiva.jussieu.fr (8.12.10/jtpda-5.4) with ESMTP id h9OD4c4B049385
          for <vojnar@dcse.fee.vutbr.cz>; Fri, 24 Oct 2003 15:04:43 +0200 (CEST)
Received: from liafa.jussieu.fr (verif2.liafa.jussieu.fr [132.227.81.178])
          by liafa1.liafa.jussieu.fr (8.12.2/jtpda-5.3.2) with ESMTP id h9OD4XjD029063
          for <vojnar@dcse.fee.vutbr.cz>; Fri, 24 Oct 2003 15:04:33 +0200 (CEST)
Sender: Peter.Habermehl@liafa.jussieu.fr
Message-ID: <3F99235C.A76D00D6@liafa.jussieu.fr>
Date: Fri, 24 Oct 2003 15:04:28 +0200
From: Peter Habermehl <Peter.Habermehl@liafa.jussieu.fr>
Reply-To: Peter.Habermehl@liafa.jussieu.fr
Organization: LIAFA
X-Mailer: Mozilla 4.79 [en] (X11; U; SunOS 5.8 sun4u)
X-Accept-Language: en
MIME-Version: 1.0
To: Tomas Vojnar <vojnar@stud.fit.vutbr.cz>
Subject: Peterson
Content-Type: multipart/mixed;
 boundary="------------48A22528E1AB2EECA7E6277D"
X-Antivirus: scanned by sophie at shiva.jussieu.fr
X-Scanned-By: MIMEDefang 2.16 (www . roaringpenguin . com / mimedefang)

This is a multi-part message in MIME format.
--------------48A22528E1AB2EECA7E6277D
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit


Hi,

Here is the explanation for Peterson.

You encode the configurations as a string in two parts:
first the regular part and then the constraint part (in unary or binary)
like R.R'.
For example
a*b*.(11)* (in unary) means that you have as configurations
a*b* and (11)* is the constraint in unary: the same number of
a than b.
Then, you encode all transitions in two parts:
a transducer is TT' with T transducer for regular part and T' the
transducer
for the constraints. Here T' is always the identity.
The initial states are also encoded as well as the good or bad states.

Then you can do all operations like union, intersection, negation, etc.
The problem now is, that R.R' could represent the empty langage.
For example (ab)*a.(11)* is empty because you have one more a than b.
So, then you refine you have to be careful not to refine with an
empty language...
For this, we would need just an emptiness check.

I did something else. I calculate an approximation of the 
reachable set with the learning method, then I check that this is an
invariant.
Then I take intersection with bad states. This is not empty.
But if you take the constraints into account its empty.
I can calcule an approximation of the constraints from a regular set
(Parikh
image) like this:
Suppose you have (ab)* and you want to calculate it's Parikh image
which is (x)* (with x = 11) expressed in unary encoding.

Now you define two transducers and take their union.
The transducers work on strings {a,b}*.{x,y,z}* where x,y,z represent
in unary two counters.
The first tranducer takes an a and adds one to the counter for the a's
the second takes a b and adds one to the counter for the b's.
Then clearly the intersection of {x,y,z}* with the
transitive closure of the image of (ab)* to values of the counters will
be
x* which is the Parikh image of (ab)*.
You can calculate an approximation of the transitive closure with the
learning
method for example.

I send you the files of the encoding of Peterson.
This does not terminate.

-- 
Peter Habermehl               e-mail: Peter.Habermehl@liafa.jussieu.fr
LIAFA - Case 7014             telephone: +33 1 44 27 28 39
Universite Paris 7            
2, place Jussieu              fax: +33 1 44 27 68 49
75251 Paris Cedex 05, France  web: verif.liafa.jussieu.fr/~haberm 

  Bureau: 175, rue du Chevaleret 75013 Paris, Bur. 6A13
--------------48A22528E1AB2EECA7E6277D
Content-Type: text/plain; charset=us-ascii;
 name="init1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="init1"

%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
r(fsa_preds),
%end sigma and symbols
4, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
1
], % end final states
[ % begin transitions
trans(0,0,3),
trans(0,x,2),
trans(1,x,1),
trans(2,x,1),
trans(3,1,0)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,'.'(*('.'(0,'.'(1,[]))),'.'(x,'.'(x,'.'(*(x),[]))))).
:- dynamic current_state/6.
current_state(0,200,2.0E+02,'967',green,flat).
current_state(2,320,1.4E+02,'968','SteelBlue1',flat).
current_state(1,440,1.4E+02,'969',red,'ridge -borderwidth 5').
current_state(3,320,2.6E+02,'970','SteelBlue1',flat).
:- fsa_globals:fsa_global_set(v_angle,0.15).

--------------48A22528E1AB2EECA7E6277D
Content-Type: text/plain; charset=us-ascii;
 name="good"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="good"

%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
r(fsa_preds),
%end sigma and symbols
6, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
0,
1,
2,
3,
5
], % end final states
[ % begin transitions
trans(0,0,1),
trans(0,1,0),
trans(0,not_in([0,1]),5),
trans(1,0,2),
trans(1,1,0),
trans(1,not_in([0,1]),5),
trans(2,0,2),
trans(2,1,0),
trans(2,x,3),
trans(2,not_in([0,1,x]),5),
trans(3,x,4),
trans(3,not_in([x]),5),
trans(4,x,4),
trans(4,not_in([x]),5),
trans(5,not_in([]),5)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,~('.'(*({}(','(0,1))),'.'(0,'.'(0,'.'(x,'.'(x,'.'(*(x),[])))))))).
:- dynamic current_state/6.
current_state(0,200,2.0E+02,'863',plum2,'ridge -borderwidth 5').
current_state(1,320,1.4E+02,'864',red,'ridge -borderwidth 5').
current_state(2,440,1.4E+02,'865',red,'ridge -borderwidth 5').
current_state(3,560,1.4E+02,'866',red,'ridge -borderwidth 5').
current_state(4,680,1.4E+02,'867','SteelBlue1',flat).
current_state(5,320,2.6E+02,'868',red,'ridge -borderwidth 5').
:- fsa_globals:fsa_global_set(v_angle,0.15).

--------------48A22528E1AB2EECA7E6277D
Content-Type: text/plain; charset=us-ascii;
 name="bad"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="bad"

%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
r(fsa_preds),
%end sigma and symbols
5, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
1
], % end final states
[ % begin transitions
trans(0,0,4),
trans(0,1,0),
trans(1,x,1),
trans(2,x,1),
trans(3,0,3),
trans(3,1,0),
trans(3,x,2),
trans(4,0,3),
trans(4,1,0)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,'.'(*({}(','(0,1))),'.'(0,'.'(0,'.'(x,'.'(x,'.'(*(x),[]))))))).
:- dynamic current_state/6.
current_state(0,200,2.0E+02,'838',green,flat).
current_state(4,320,2.0E+02,'839','SteelBlue1',flat).
current_state(3,440,2.0E+02,'840','SteelBlue1',flat).
current_state(2,560,2.0E+02,'841','SteelBlue1',flat).
current_state(1,680,2.0E+02,'842',red,'ridge -borderwidth 5').
:- fsa_globals:fsa_global_set(v_angle,0.15).

--------------48A22528E1AB2EECA7E6277D
Content-Type: text/plain; charset=us-ascii;
 name="trans1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="trans1"

%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
t(fsa_preds,fsa_preds),
%end sigma and symbols
4, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
1,
2
], % end final states
[ % begin transitions
trans(0,0/0,0),
trans(0,0/1,3),
trans(1,0/0,1),
trans(1,1/1,1),
trans(1,x/x,2),
trans(2,x/x,2),
trans(3,1/0,1)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,'.'(*({}(:(0,0))),'.'(:(0,1),'.'(:(1,0),'.'(*({}(','(:(0,0),:(1,1)))),'.'(*({}(:(x,x))),[])))))).
:- dynamic current_state/6.
current_state(0,200,2.0E+02,'48',green,flat).
current_state(3,320,2.0E+02,'49','SteelBlue1',flat).
current_state(1,440,2.0E+02,'50',red,'ridge -borderwidth 5').
current_state(2,560,2.0E+02,'51',red,'ridge -borderwidth 5').
:- fsa_globals:fsa_global_set(v_angle,0.15).

--------------48A22528E1AB2EECA7E6277D
Content-Type: text/plain; charset=us-ascii;
 name="trans2"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="trans2"

%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
t(fsa_preds,fsa_preds),
%end sigma and symbols
5, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
1,
2
], % end final states
[ % begin transitions
trans(0,0/0,0),
trans(0,1/1,4),
trans(1,1/1,1),
trans(1,x/x,2),
trans(2,x/x,2),
trans(3,1/0,1),
trans(4,0/0,0),
trans(4,0/1,3),
trans(4,1/1,4)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,'.'(*({}(','(:(0,0),:(1,1)))),'.'(:(1,1),'.'(:(0,1),'.'(:(1,0),'.'(*({}(:(1,1))),'.'(*({}(:(x,x))),[]))))))).
:- dynamic current_state/6.
current_state(0,200,2.0E+02,'23',green,flat).
current_state(4,320,2.0E+02,'24','SteelBlue1',flat).
current_state(3,440,2.0E+02,'25','SteelBlue1',flat).
current_state(1,560,2.0E+02,'26',red,'ridge -borderwidth 5').
current_state(2,680,2.0E+02,'27',red,'ridge -borderwidth 5').
:- fsa_globals:fsa_global_set(v_angle,0.15).

--------------48A22528E1AB2EECA7E6277D
Content-Type: text/plain; charset=us-ascii;
 name="trans3"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="trans3"

%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
t(fsa_preds,fsa_preds),
%end sigma and symbols
5, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
1,
2
], % end final states
[ % begin transitions
trans(0,0/0,4),
trans(0,1/1,0),
trans(1,0/0,1),
trans(1,1/1,1),
trans(1,x/x,2),
trans(2,x/x,2),
trans(3,1/0,1),
trans(4,0/0,4),
trans(4,0/1,3),
trans(4,1/1,0)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,'.'(*({}(','(:(0,0),:(1,1)))),'.'(:(0,0),'.'(:(0,1),'.'(:(1,0),'.'(*({}(','(:(0,0),:(1,1)))),'.'(*({}(:(x,x))),[]))))))).
:- dynamic current_state/6.
current_state(0,200,2.0E+02,'66',green,flat).
current_state(4,320,2.0E+02,'67','SteelBlue1',flat).
current_state(3,440,2.0E+02,'68','SteelBlue1',flat).
current_state(1,560,2.0E+02,'69',red,'ridge -borderwidth 5').
current_state(2,680,2.0E+02,'70',red,'ridge -borderwidth 5').
:- fsa_globals:fsa_global_set(v_angle,0.15).

--------------48A22528E1AB2EECA7E6277D
Content-Type: text/plain; charset=us-ascii;
 name="trans4"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="trans4"

%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
t(fsa_preds,fsa_preds),
%end sigma and symbols
3, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
1
], % end final states
[ % begin transitions
trans(0,[]/0,2),
trans(1,x/x,1),
trans(2,0/0,2),
trans(2,0/[],1),
trans(2,1/1,2)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,'.'(:([],0),'.'(*({}(','(:(0,0),:(1,1)))),'.'(:(0,[]),'.'(*({}(:(x,x))),[]))))).
:- dynamic current_state/6.
current_state(1,437,146.0,'93',red,'ridge -borderwidth 5').
current_state(2,320,227.0,'92','SteelBlue1',flat).
current_state(0,200,2.0E+02,'91',green,flat).
:- fsa_globals:fsa_global_set(v_angle,0.15).

--------------48A22528E1AB2EECA7E6277D
Content-Type: text/plain; charset=us-ascii;
 name="trans5"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="trans5"

%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
t(fsa_preds,fsa_preds),
%end sigma and symbols
2, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
0,
1
], % end final states
[ % begin transitions
trans(0,0/0,0),
trans(0,1/1,0),
trans(0,v/v,1),
trans(0,x/x,1),
trans(0,z/z,1),
trans(1,v/v,1),
trans(1,x/x,1),
trans(1,z/z,1)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,'.'(*({}(','(:(0,0),:(1,1)))),'.'(*({}(','(:(x,x),','(:(v,v),:(z,z))))),[]))).
:- dynamic current_state/6.
current_state(0,200,2.0E+02,'104',plum2,'ridge -borderwidth 5').
current_state(1,320,2.0E+02,'105',red,'ridge -borderwidth 5').
:- fsa_globals:fsa_global_set(v_angle,0.15).

--------------48A22528E1AB2EECA7E6277D
Content-Type: text/plain; charset=us-ascii;
 name="trans"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="trans"

%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
t(fsa_preds,fsa_preds),
%end sigma and symbols
10, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
0,
1,
2,
3,
4,
5,
6
], % end final states
[ % begin transitions
trans(0,0/0,1),
trans(0,0/1,7),
trans(0,1/1,2),
trans(0,[]/0,8),
trans(0,v/v,3),
trans(0,x/x,3),
trans(0,z/z,3),
trans(1,0/0,1),
trans(1,0/1,7),
trans(1,1/1,2),
trans(1,v/v,3),
trans(1,x/x,3),
trans(1,z/z,3),
trans(2,0/0,1),
trans(2,0/1,9),
trans(2,1/1,2),
trans(2,v/v,3),
trans(2,x/x,3),
trans(2,z/z,3),
trans(3,v/v,3),
trans(3,x/x,3),
trans(3,z/z,3),
trans(4,0/0,4),
trans(4,1/1,4),
trans(4,x/x,5),
trans(5,x/x,5),
trans(6,1/1,6),
trans(6,x/x,5),
trans(7,1/0,4),
trans(8,0/0,8),
trans(8,0/[],5),
trans(8,1/1,8),
trans(9,1/0,6)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,{}(','(file(trans1),','(file(trans2),','(file(trans3),','(file(trans4),file(trans5))))))).
:- dynamic current_state/6.
current_state(0,200,2.0E+02,'120',plum2,'ridge -borderwidth 5').
current_state(1,320,-4.0E+01,'121',red,'ridge -borderwidth 5').
current_state(2,320,8.0E+01,'122',red,'ridge -borderwidth 5').
current_state(9,440,8.0E+01,'123','SteelBlue1',flat).
current_state(6,560,8.0E+01,'124',red,'ridge -borderwidth 5').
current_state(3,320,2.0E+02,'125',red,'ridge -borderwidth 5').
current_state(7,320,3.2E+02,'126','SteelBlue1',flat).
current_state(4,440,3.2E+02,'127',red,'ridge -borderwidth 5').
current_state(8,320,4.4E+02,'128','SteelBlue1',flat).
current_state(5,440,4.4E+02,'129',red,'ridge -borderwidth 5').
:- fsa_globals:fsa_global_set(v_angle,0.15).

--------------48A22528E1AB2EECA7E6277D--
