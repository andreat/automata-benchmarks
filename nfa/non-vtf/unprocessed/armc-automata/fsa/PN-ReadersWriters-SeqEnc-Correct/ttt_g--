%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
t(fsa_preds,fsa_preds),
%end sigma and symbols
19, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
1
], % end final states
[ % begin transitions
trans(0,a/a,11),
trans(0,b/b,12),
trans(0,c/c,13),
trans(0,d/d,14),
trans(0,e/e,15),
trans(0,f/f,16),
trans(0,g/[],8),
trans(0,h/h,17),
trans(0,i/i,18),
trans(0,x/x,0),
trans(1,a/a,2),
trans(1,b/b,3),
trans(1,c/c,4),
trans(1,d/d,5),
trans(1,e/e,6),
trans(1,f/f,7),
trans(1,g/g,8),
trans(2,b/b,3),
trans(2,c/c,4),
trans(2,d/d,5),
trans(2,e/e,6),
trans(2,f/f,7),
trans(2,g/g,8),
trans(3,c/c,4),
trans(3,d/d,5),
trans(3,e/e,6),
trans(3,f/f,7),
trans(3,g/g,8),
trans(4,d/d,5),
trans(4,e/e,6),
trans(4,f/f,7),
trans(4,g/g,8),
trans(5,e/e,6),
trans(5,f/f,7),
trans(5,g/g,8),
trans(6,f/f,7),
trans(6,g/g,8),
trans(7,g/g,8),
trans(8,h/h,9),
trans(8,i/i,10),
trans(8,x/x,1),
trans(9,i/i,10),
trans(9,x/x,1),
trans(10,x/x,1),
trans(11,b/b,12),
trans(11,c/c,13),
trans(11,d/d,14),
trans(11,e/e,15),
trans(11,f/f,16),
trans(11,g/[],8),
trans(11,h/h,17),
trans(11,i/i,18),
trans(11,x/x,0),
trans(12,c/c,13),
trans(12,d/d,14),
trans(12,e/e,15),
trans(12,f/f,16),
trans(12,g/[],8),
trans(12,h/h,17),
trans(12,i/i,18),
trans(12,x/x,0),
trans(13,d/d,14),
trans(13,e/e,15),
trans(13,f/f,16),
trans(13,g/[],8),
trans(13,h/h,17),
trans(13,i/i,18),
trans(13,x/x,0),
trans(14,e/e,15),
trans(14,f/f,16),
trans(14,g/[],8),
trans(14,h/h,17),
trans(14,i/i,18),
trans(14,x/x,0),
trans(15,f/f,16),
trans(15,g/[],8),
trans(15,h/h,17),
trans(15,i/i,18),
trans(15,x/x,0),
trans(16,g/[],8),
trans(16,h/h,17),
trans(16,i/i,18),
trans(16,x/x,0),
trans(17,i/i,18),
trans(17,x/x,0),
trans(18,x/x,0)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,'.'(*('.'({}(','(a,[])),'.'({}(','(b,[])),'.'({}(','(c,[])),'.'({}(','(d,[])),'.'({}(','(e,[])),'.'({}(','(f,[])),'.'({}(','(h,[])),'.'({}(','(i,[])),'.'(x,[])))))))))),'.'('.'({}(','(a,[])),'.'({}(','(b,[])),'.'({}(','(c,[])),'.'({}(','(d,[])),'.'({}(','(e,[])),'.'({}(','(f,[])),'.'(:(g,[]),'.'({}(','(h,[])),'.'({}(','(i,[])),'.'(x,[])))))))))),'.'(*('.'({}(','(a,[])),'.'({}(','(b,[])),'.'({}(','(c,[])),'.'({}(','(d,[])),'.'({}(','(e,[])),'.'({}(','(f,[])),'.'(g,'.'({}(','(h,[])),'.'({}(','(i,[])),'.'(x,[]))))))))))),[])))).
:- dynamic current_state/6.
current_state(0,200,2.0E+02,'16251',green,flat).
current_state(8,320,-2.8E+02,'16252','SteelBlue1',flat).
current_state(1,440,-4.0E+02,'16253',red,'ridge -borderwidth 5').
current_state(2,560,-7.0E+02,'16254','SteelBlue1',flat).
current_state(3,560,-5.8E+02,'16255','SteelBlue1',flat).
current_state(4,560,-4.6E+02,'16256','SteelBlue1',flat).
current_state(5,560,-3.4E+02,'16257','SteelBlue1',flat).
current_state(6,560,-2.2E+02,'16258','SteelBlue1',flat).
current_state(7,560,-1.0E+02,'16259','SteelBlue1',flat).
current_state(9,440,2.0E+01,'16260','SteelBlue1',flat).
current_state(10,440,1.4E+02,'16261','SteelBlue1',flat).
current_state(11,320,2.6E+02,'16262','SteelBlue1',flat).
current_state(12,320,3.8E+02,'16263','SteelBlue1',flat).
current_state(13,320,5.0E+02,'16264','SteelBlue1',flat).
current_state(14,320,6.2E+02,'16265','SteelBlue1',flat).
current_state(15,320,7.4E+02,'16266','SteelBlue1',flat).
current_state(16,320,8.6E+02,'16267','SteelBlue1',flat).
current_state(17,320,9.8E+02,'16268','SteelBlue1',flat).
current_state(18,320,1.1E+03,'16269','SteelBlue1',flat).
:- fsa_globals:fsa_global_set(v_angle,0.15).
