system example;

gate
g1(int);
g2(int);

sync
 hide g1 in ( pr1 |[ g1 , g2 ]| pr2 ) |[ g2 ]| 
 hide g1 in ( pr3 |[ g1 , g2 ]| pr4 )   end ;

process pr1;
var
x(0) : int;


state
s1 :init;
/*
s2 :nostable ;
s3 :nostable ; 
*/
s2 ;
s3 ;


transition
from s1 if x < 10  do x := x + 1 to s1; 

from s1 sync g1!x to s2;

from s1 sync g2!x to s3;

meta_local
from s1 by s1;


process pr2;
var
y(0) : int;


state
s1 :init;
s2 :nostable;
s3 :nostable  assert (y = 10) ; end ;


transition
t1: from s1 do y := y + 2 to s1; 

from s1 sync g1!y to s2;

from s1 sync g2!y to s3;

meta_local
from s1 by t1;


process pr3;
var
z(0) : int;

state
s1 :init;
s2 ;
s3 ;
/*
s3 :nostable assert ( z < 0 ) ; end ;
*/

transition
from s1 if (z < 10) do z := z + 5 to s1; 

from s1 sync g1!z to s2;

from s1 sync g2!z to s3;


process pr4;
var
w(10) : int;

state
s1 :init;
s2 ; 
s3;
/*
s3 :nostable ;
*/

transition

from s1 sync g1!w to s2;

from s1 sync g2!w to s3;


/**********************************************
 Results: 000406
BeBobaBambou (fantasio)> siflash -v ../tests/sync_ok3.if
create_sync : more than 1 atomic destination states.
        pr1.s2 & pr2.s2.
create_sync : more than 1 atomic destination states.
        pr1.s3 & pr2.s3 & pr3.s3 & pr4.s3.
*********************************************/