%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
r(fsa_preds),
%end sigma and symbols
9, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
1
], % end final states
[ % begin transitions
trans(0,n,8),
trans(1,in(['00','01','10','11']),1),
trans(1,in([plock,punlock]),2),
trans(1,not_in(['00','01','10','11',plock,punlock]),3),
trans(2,p1,7),
trans(2,in([plock,punlock]),2),
trans(2,not_in([p1,plock,punlock]),3),
trans(3,in([plock,punlock]),2),
trans(3,not_in([plock,punlock]),3),
trans(4,c1,4),
trans(4,in(['00','11']),5),
trans(4,in(['01','10']),1),
trans(4,in([plock,punlock]),2),
trans(4,not_in(['00','01','10','11',c1,plock,punlock]),3),
trans(5,in(['00','11']),5),
trans(5,in(['01','10']),1),
trans(5,in([plock,punlock]),2),
trans(5,not_in(['00','01','10','11',plock,punlock]),3),
trans(6,c1,4),
trans(6,in([plock,punlock]),2),
trans(6,not_in([c1,plock,punlock]),3),
trans(7,p1,7),
trans(7,in([clock,cunlock]),6),
trans(7,in([plock,punlock]),2),
trans(7,not_in([clock,cunlock,p1,plock,punlock]),3),
trans(8,l,3)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,'.'(n,'.'(l,'.'(*(?),'.'({}(','(plock,punlock)),'.'(+(p1),'.'({}(','(clock,cunlock)),'.'(+(c1),'.'(*({}(','('00',','('01',','('10','11'))))),'.'({}(','('01','10')),'.'(*({}(','('00',','('01',','('10','11'))))),[]))))))))))).
:- dynamic current_state/6.
current_state(0,200,2.0E+02,'3696',green,flat).
current_state(8,320,2.0E+02,'3697','SteelBlue1',flat).
current_state(3,440,2.0E+02,'3698','SteelBlue1',flat).
current_state(2,560,2.0E+02,'3699','SteelBlue1',flat).
current_state(7,680,2.0E+02,'3700','SteelBlue1',flat).
current_state(6,800,2.0E+02,'3701','SteelBlue1',flat).
current_state(4,920,2.0E+02,'3702','SteelBlue1',flat).
current_state(1,1040,1.4E+02,'3703',red,'ridge -borderwidth 5').
current_state(5,1040,2.6E+02,'3704','SteelBlue1',flat).
:- fsa_globals:fsa_global_set(v_angle,0.15).
