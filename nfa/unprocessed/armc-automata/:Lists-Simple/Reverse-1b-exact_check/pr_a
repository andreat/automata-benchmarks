%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
r(fsa_preds),
%end sigma and symbols
94, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11
], % end final states
[ % begin transitions
trans(0,c,22),
trans(0,e,17),
trans(0,n,23),
trans(0,s,24),
trans(0,u,25),
trans(1,not_in([]),1),
trans(2,l,5),
trans(2,x,12),
trans(2,in([!,#,/,'_bgn','|']),2),
trans(2,not_in([!,#,/,'_bgn',l,x,'|']),6),
trans(3,#,8),
trans(3,l,13),
trans(3,x,4),
trans(3,not_in([#,l,x]),3),
trans(4,not_in([l]),4),
trans(5,x,14),
trans(5,y,9),
trans(5,in(['_end','_fst','_snd']),5),
trans(5,not_in(['_end','_fst','_snd',x,y]),7),
trans(6,l,7),
trans(6,x,12),
trans(6,in([/,'|']),2),
trans(6,not_in([/,l,x,'|']),6),
trans(7,not_in([x]),7),
trans(8,l,15),
trans(8,x,10),
trans(8,in([!,#,'_bgn','_end','_fst','_snd']),8),
trans(8,not_in([!,#,'_bgn','_end','_fst','_snd',l,x]),4),
trans(9,l,7),
trans(9,x,4),
trans(9,not_in([l,x]),9),
trans(10,y,10),
trans(10,'|',9),
trans(10,not_in([l,y,'|']),4),
trans(11,not_in([y]),11),
trans(12,in([/,'|']),49),
trans(12,not_in([/,l,'|']),12),
trans(13,#,15),
trans(13,not_in([#,x]),13),
trans(14,y,4),
trans(14,in(['_end','_fst','_snd',x]),14),
trans(15,x,65),
trans(15,in([!,#,'_bgn','_end','_fst','_snd',l]),15),
trans(16,l,1),
trans(16,not_in([/,l]),16),
trans(17,l3,18),
trans(17,l4,19),
trans(17,l6,20),
trans(17,l7,21),
trans(17,in([l2,l5]),16),
trans(18,#,26),
trans(18,/,27),
trans(18,l,1),
trans(18,not_in([#,/,l]),18),
trans(19,#,28),
trans(19,/,29),
trans(19,in([l,x]),1),
trans(19,not_in([#,/,l,x]),19),
trans(20,y,1),
trans(20,not_in([/,y]),20),
trans(21,x,1),
trans(21,not_in([/,x]),21),
trans(22,l4,42),
trans(23,l2,31),
trans(23,l3,30),
trans(23,l4,32),
trans(23,l5,33),
trans(23,l6,34),
trans(23,l7,29),
trans(23,l8,35),
trans(24,not_in([]),61),
trans(25,l4,73),
trans(26,/,36),
trans(26,l,1),
trans(26,'|',37),
trans(26,not_in([/,l,'|']),26),
trans(27,#,36),
trans(27,l,46),
trans(27,not_in([#,l]),27),
trans(28,/,38),
trans(28,'|',39),
trans(28,in([l,x]),1),
trans(28,not_in([/,l,x,'|']),28),
trans(29,#,38),
trans(29,not_in([#]),29),
trans(30,'|',1),
trans(30,not_in([l,'|']),30),
trans(31,#,50),
trans(31,l,13),
trans(31,x,12),
trans(31,in([/,'|']),53),
trans(31,not_in([#,/,l,x,'|']),31),
trans(32,#,89),
trans(32,'|',80),
trans(32,not_in([#,y,'|']),32),
trans(33,'|',1),
trans(33,not_in(['|']),33),
trans(34,/,68),
trans(34,not_in([/,x]),34),
trans(35,in([/,'|']),57),
trans(35,not_in([/,l,'|']),35),
trans(36,l,1),
trans(36,'|',43),
trans(36,not_in([l,'|']),36),
trans(37,/,43),
trans(37,l,1),
trans(37,not_in([/,l]),37),
trans(38,l,1),
trans(38,not_in([l,'|']),38),
trans(39,in([l,x]),1),
trans(39,not_in([/,l,x]),39),
trans(40,l,1),
trans(40,'|',41),
trans(40,not_in([l,'|']),40),
trans(41,/,42),
trans(41,x,40),
trans(41,not_in([/,x]),41),
trans(42,'|',41),
trans(42,not_in(['|']),42),
trans(43,l,64),
trans(43,not_in([l]),43),
trans(44,/,45),
trans(44,l,1),
trans(44,'|',43),
trans(44,not_in([/,l,'|']),44),
trans(45,'|',43),
trans(45,in([!,l]),1),
trans(45,not_in([!,l,'|']),36),
trans(46,#,44),
trans(46,/,47),
trans(46,'|',27),
trans(46,not_in([#,/,'|']),46),
trans(47,!,1),
trans(47,#,36),
trans(47,l,46),
trans(47,not_in([!,#,l]),27),
trans(48,/,49),
trans(48,y,48),
trans(48,'|',2),
trans(48,not_in([/,l,y,'|']),12),
trans(49,l,14),
trans(49,in([!,#,/,'_bgn','|']),49),
trans(49,not_in([!,#,/,'_bgn',l,'|']),12),
trans(50,l,15),
trans(50,x,48),
trans(50,in([!,#,'_bgn','_end','_fst','_snd']),50),
trans(50,in([/,'|']),49),
trans(50,not_in([!,#,/,'_bgn','_end','_fst','_snd',l,x,'|']),12),
trans(51,l,52),
trans(51,x,48),
trans(51,in([!,#,'_bgn']),51),
trans(51,in([/,'|']),49),
trans(51,in(['_end','_fst','_snd']),50),
trans(51,not_in([!,#,/,'_bgn','_end','_fst','_snd',l,x,'|']),12),
trans(52,x,56),
trans(52,y,4),
trans(52,in([!,#,'_bgn',l]),15),
trans(52,in(['_end','_fst','_snd']),52),
trans(53,#,51),
trans(53,l,54),
trans(53,x,12),
trans(53,in([!,/,'_bgn','|']),53),
trans(53,not_in([!,#,/,'_bgn',l,x,'|']),31),
trans(54,#,15),
trans(54,x,14),
trans(54,y,3),
trans(54,in(['_end','_fst','_snd']),54),
trans(54,not_in([#,'_end','_fst','_snd',x,y]),13),
trans(55,x,4),
trans(55,in(['_end','_fst','_snd']),55),
trans(56,y,10),
trans(56,'|',7),
trans(56,in(['_end','_fst','_snd',x]),14),
trans(57,l,55),
trans(57,in([!,#,/,'_bgn','|']),57),
trans(57,not_in([!,#,/,'_bgn',l,'|']),35),
trans(58,'_t',58),
trans(58,in([!,#,/,'_bgn','_end','_fst','_snd',l,x,y]),1),
trans(58,not_in([!,#,/,'_bgn','_end','_fst','_snd','_t',l,x,y]),59),
trans(59,'_t',58),
trans(59,not_in(['_t']),59),
trans(60,'_f',1),
trans(60,not_in(['_f']),60),
trans(61,'_f',59),
trans(61,'_t',62),
trans(61,not_in(['_f','_t']),61),
trans(62,'_f',59),
trans(62,'_t',62),
trans(62,in([!,#,/,'_bgn','_end','_fst','_snd',l,x,y]),60),
trans(62,not_in([!,#,/,'_bgn','_end','_f','_fst','_snd','_t',l,x,y]),61),
trans(63,!,1),
trans(63,l,64),
trans(63,not_in([!,l]),43),
trans(64,/,63),
trans(64,'|',43),
trans(64,not_in([/,'|']),64),
trans(65,y,65),
trans(65,'|',7),
trans(66,y,66),
trans(66,in([/,'|']),7),
trans(67,x,66),
trans(67,in(['_end','_fst','_snd',l]),67),
trans(67,not_in(['_end','_fst','_snd',l,x]),68),
trans(68,l,67),
trans(68,not_in([l,x]),68),
trans(69,l,70),
trans(69,x,1),
trans(69,'|',71),
trans(69,not_in([l,x,'|']),69),
trans(70,x,1),
trans(70,in([/,'|']),71),
trans(70,not_in([/,x,'|']),70),
trans(71,/,69),
trans(71,l,72),
trans(71,not_in([/,l]),71),
trans(72,in([/,'|']),71),
trans(72,not_in([/,'|']),72),
trans(73,'|',72),
trans(73,not_in([l,'|']),73),
trans(74,/,11),
trans(75,/,11),
trans(75,'|',76),
trans(76,l,93),
trans(76,not_in([l,y]),76),
trans(77,#,78),
trans(77,l,79),
trans(77,y,74),
trans(77,in([!,'_bgn','_end','_fst','_snd',x]),77),
trans(77,not_in([!,#,'_bgn','_end','_fst','_snd',l,x,y]),80),
trans(78,l,84),
trans(78,y,75),
trans(78,in([!,#,'_bgn','_end','_fst','_snd',x]),78),
trans(78,not_in([!,#,'_bgn','_end','_fst','_snd',l,x,y]),83),
trans(79,#,84),
trans(79,/,77),
trans(79,y,74),
trans(79,'|',80),
trans(79,in([!,'_bgn','_end','_fst','_snd',l,x]),79),
trans(79,not_in([!,#,/,'_bgn','_end','_fst','_snd',l,x,y,'|']),85),
trans(80,#,88),
trans(80,l,85),
trans(80,not_in([#,l,y]),80),
trans(81,l,82),
trans(81,y,74),
trans(81,in([!,#,'_bgn','_end','_fst','_snd',x]),81),
trans(81,not_in([!,#,'_bgn','_end','_fst','_snd',l,x,y]),83),
trans(82,/,81),
trans(82,y,74),
trans(82,'|',83),
trans(82,in([!,#,'_bgn','_end','_fst','_snd',l,x]),82),
trans(82,not_in([!,#,/,'_bgn','_end','_fst','_snd',l,x,y,'|']),86),
trans(83,l,86),
trans(83,not_in([l,y]),83),
trans(84,/,81),
trans(84,y,75),
trans(84,'|',83),
trans(84,in([!,#,'_bgn','_end','_fst','_snd',l,x]),84),
trans(84,not_in([!,#,/,'_bgn','_end','_fst','_snd',l,x,y,'|']),86),
trans(85,#,87),
trans(85,/,77),
trans(85,'|',80),
trans(85,not_in([#,/,y,'|']),85),
trans(86,/,81),
trans(86,'|',83),
trans(86,not_in([/,y,'|']),86),
trans(87,/,81),
trans(87,y,90),
trans(87,'|',83),
trans(87,in([!,#,'_bgn','_end','_fst','_snd',l,x]),87),
trans(87,not_in([!,#,/,'_bgn','_end','_fst','_snd',l,x,y,'|']),86),
trans(88,l,87),
trans(88,y,90),
trans(88,in([!,#,'_bgn','_end','_fst','_snd',x]),88),
trans(88,not_in([!,#,'_bgn','_end','_fst','_snd',l,x,y]),83),
trans(89,y,90),
trans(89,'|',83),
trans(89,in([!,#,'_bgn','_end','_fst','_snd',l,x]),89),
trans(89,not_in([!,#,'_bgn','_end','_fst','_snd',l,x,y,'|']),91),
trans(90,'|',76),
trans(91,'|',83),
trans(91,not_in([y,'|']),91),
trans(92,#,11),
trans(92,l,93),
trans(92,not_in([#,l,y]),76),
trans(93,/,92),
trans(93,'|',76),
trans(93,not_in([/,y,'|']),93)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,minimize(range(file(tr)))).
:- dynamic current_state/6.
:- fsa_globals:fsa_global_set(v_angle,0.15).
