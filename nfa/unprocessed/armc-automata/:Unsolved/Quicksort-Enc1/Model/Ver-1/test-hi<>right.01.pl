%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
t(fsa_preds,fsa_preds),
%end sigma and symbols
4, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
3
], % end final states
[ % begin transitions

trans(0,b/b,1),


trans(1,qs1/qs1,2),


trans(2,'00000'/'00000',2),
trans(2,'00100'/'00100',2),
trans(2,'01000'/'01000',2),
trans(2,'01100'/'01100',2),
trans(2,'10000'/'10000',2),
trans(2,'10100'/'10100',2),
trans(2,'11000'/'11000',2),
trans(2,'11100'/'11100',2),

trans(2,'00011'/'00011',2),
trans(2,'00111'/'00111',2),
trans(2,'01011'/'01011',2),
trans(2,'01111'/'01111',2),
trans(2,'10011'/'10011',2),
trans(2,'10111'/'10111',2),
trans(2,'11011'/'11011',2),
trans(2,'11111'/'11111',2),

trans(2,'00010'/'00010',3),
trans(2,'00110'/'00110',3),
trans(2,'01010'/'01010',3),
trans(2,'01110'/'01110',3),
trans(2,'10010'/'10010',3),
trans(2,'10110'/'10110',3),
trans(2,'11010'/'11010',3),
trans(2,'11110'/'11110',3),

trans(2,'00001'/'00001',3),
trans(2,'00101'/'00101',3),
trans(2,'01001'/'01001',3),
trans(2,'01101'/'01101',3),
trans(2,'10001'/'10001',3),
trans(2,'10101'/'10101',3),
trans(2,'11001'/'11001',3),
trans(2,'11101'/'11101',3),


trans(3,$@(not_in([]))/ $@(not_in([])),3)


], % end transitions
[]). % jumps
















