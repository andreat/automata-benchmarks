%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
r(fsa_preds),
%end sigma and symbols
13, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
0,
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11
], % end final states
[ % begin transitions
trans(0,c,1),
trans(0,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111']),2),
trans(0,in([i,w]),3),
trans(1,c,4),
trans(1,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111']),2),
trans(1,in([i,w]),5),
trans(2,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111',c,i,w]),2),
trans(3,c,5),
trans(3,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111']),2),
trans(3,in([i,w]),6),
trans(4,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111']),2),
trans(4,in([c,i,w]),7),
trans(5,c,7),
trans(5,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111']),2),
trans(5,in([i,w]),8),
trans(6,c,8),
trans(6,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111']),2),
trans(6,in([i,w]),9),
trans(7,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111']),2),
trans(7,in([c,i,w]),10),
trans(8,c,10),
trans(8,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111']),2),
trans(8,in([i,w]),11),
trans(9,c,11),
trans(9,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111',i,w]),2),
trans(10,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111']),2),
trans(10,in([c,i,w]),12),
trans(11,c,12),
trans(11,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111',i,w]),2),
trans(12,in(['00000','00001','00010','00011','00100','00101','00110','00111','01000','01001','01010','01011','01100','01101','01110','01111','10000','10001','10010','10011','10100','10101','10110','10111','11000','11001','11010','11011','11100','11101','11110','11111']),12),
trans(12,in([c,i,w]),2)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,&(~(file(bad)),*({}(','(i,','(c,','(w,file(alph)))))))).
:- dynamic current_state/6.
current_state(0,200,2.0E+02,'2549',plum2,'ridge -borderwidth 5').
current_state(1,320,8.0E+01,'2550',red,'ridge -borderwidth 5').
current_state(4,440,2.0E+01,'2551',red,'ridge -borderwidth 5').
current_state(7,560,2.0E+01,'2552',red,'ridge -borderwidth 5').
current_state(10,680,2.0E+01,'2553',red,'ridge -borderwidth 5').
current_state(12,800,2.0E+01,'2554','SteelBlue1',flat).
current_state(5,440,1.4E+02,'2555',red,'ridge -borderwidth 5').
current_state(8,560,1.4E+02,'2556',red,'ridge -borderwidth 5').
current_state(11,680,1.4E+02,'2557',red,'ridge -borderwidth 5').
current_state(2,320,2.6E+02,'2558',red,'ridge -borderwidth 5').
current_state(3,320,3.8E+02,'2559',red,'ridge -borderwidth 5').
current_state(6,440,3.8E+02,'2560',red,'ridge -borderwidth 5').
current_state(9,560,3.8E+02,'2561',red,'ridge -borderwidth 5').
:- fsa_globals:fsa_global_set(v_angle,0.15).
