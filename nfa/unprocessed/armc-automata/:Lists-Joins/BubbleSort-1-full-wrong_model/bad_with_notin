%% Automatically generated by FSA Utilities.
%% For more info, cf. http://www.let.rug.nl/~vannoord/Fsa/

fa(
%begin sigma and symbols
r(fsa_preds),
%end sigma and symbols
103, % number of states
[ % begin start states
0
], % end start states
[ % begin final states
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
], % end final states
[ % begin transitions
trans(0,n,101),
trans(0,in([e,u]),1),
trans(0,not_in([e,n,u]),102),
trans(1,not_in([]),1),
trans(2,'|',3),
trans(2,not_in(['|']),2),
trans(3,gt,4),
trans(3,lte,5),
trans(3,m_t,6),
trans(3,n_t,7),
trans(3,not_in([gt,lte,m_t,n_t]),1),
trans(4,x,8),
trans(4,not_in([x]),1),
trans(5,x,9),
trans(5,not_in([x]),1),
trans(6,gt,10),
trans(6,lte,11),
trans(6,not_in([gt,lte]),1),
trans(7,gt,12),
trans(7,lte,13),
trans(7,not_in([gt,lte]),1),
trans(8,/,14),
trans(8,in([p,t,y,yn]),8),
trans(8,not_in([/,p,t,y,yn]),1),
trans(9,/,15),
trans(9,in([p,t,y,yn]),9),
trans(9,not_in([/,p,t,y,yn]),1),
trans(10,/,16),
trans(10,in([p,t,y,yn]),10),
trans(10,not_in([/,p,t,y,yn]),1),
trans(11,/,17),
trans(11,in([p,t,y,yn]),11),
trans(11,not_in([/,p,t,y,yn]),1),
trans(12,/,18),
trans(12,in([p,t,y,yn]),12),
trans(12,not_in([/,p,t,y,yn]),1),
trans(13,/,19),
trans(13,in([p,t,y,yn]),13),
trans(13,not_in([/,p,t,y,yn]),1),
trans(14,#,20),
trans(14,not_in([#]),1),
trans(15,#,20),
trans(15,gt,8),
trans(15,lte,9),
trans(15,m_f,21),
trans(15,n_f,22),
trans(15,not_in([#,gt,lte,m_f,n_f]),1),
trans(16,#,23),
trans(16,not_in([#]),1),
trans(17,#,23),
trans(17,gt,10),
trans(17,lte,11),
trans(17,n_f,24),
trans(17,not_in([#,gt,lte,n_f]),1),
trans(18,#,25),
trans(18,not_in([#]),1),
trans(19,#,25),
trans(19,gt,12),
trans(19,lte,13),
trans(19,m_f,26),
trans(19,not_in([#,gt,lte,m_f]),1),
trans(20,'|',100),
trans(20,not_in(['|']),1),
trans(21,'|',27),
trans(21,not_in(['|']),1),
trans(22,'|',28),
trans(22,not_in(['|']),1),
trans(23,'|',29),
trans(23,not_in(['|']),1),
trans(24,'|',30),
trans(24,not_in(['|']),1),
trans(25,'|',31),
trans(25,not_in(['|']),1),
trans(26,'|',32),
trans(26,not_in(['|']),1),
trans(27,m_t,33),
trans(27,n_t,34),
trans(27,not_in([m_t,n_t]),1),
trans(28,m_t,35),
trans(28,n_t,36),
trans(28,not_in([m_t,n_t]),1),
trans(29,lte,37),
trans(29,n_t,38),
trans(29,not_in([lte,n_t]),1),
trans(30,lte,39),
trans(30,n_t,40),
trans(30,not_in([lte,n_t]),1),
trans(31,lte,41),
trans(31,m_t,42),
trans(31,not_in([lte,m_t]),1),
trans(32,lte,43),
trans(32,m_t,44),
trans(32,not_in([lte,m_t]),1),
trans(33,gt,8),
trans(33,lte,45),
trans(33,not_in([gt,lte]),1),
trans(34,gt,46),
trans(34,lte,47),
trans(34,not_in([gt,lte]),1),
trans(35,gt,48),
trans(35,lte,49),
trans(35,not_in([gt,lte]),1),
trans(36,gt,8),
trans(36,lte,50),
trans(36,not_in([gt,lte]),1),
trans(37,x,51),
trans(37,not_in([x]),1),
trans(38,lte,52),
trans(38,not_in([lte]),1),
trans(39,x,53),
trans(39,not_in([x]),1),
trans(40,gt,54),
trans(40,lte,55),
trans(40,not_in([gt,lte]),1),
trans(41,x,56),
trans(41,not_in([x]),1),
trans(42,lte,57),
trans(42,not_in([lte]),1),
trans(43,x,58),
trans(43,not_in([x]),1),
trans(44,gt,59),
trans(44,lte,60),
trans(44,not_in([gt,lte]),1),
trans(45,/,61),
trans(45,in([p,t,y,yn]),45),
trans(45,not_in([/,p,t,y,yn]),1),
trans(46,/,62),
trans(46,in([p,t,y,yn]),46),
trans(46,not_in([/,p,t,y,yn]),1),
trans(47,/,63),
trans(47,in([p,t,y,yn]),47),
trans(47,not_in([/,p,t,y,yn]),1),
trans(48,/,64),
trans(48,in([p,t,y,yn]),48),
trans(48,not_in([/,p,t,y,yn]),1),
trans(49,/,65),
trans(49,in([p,t,y,yn]),49),
trans(49,not_in([/,p,t,y,yn]),1),
trans(50,/,66),
trans(50,in([p,t,y,yn]),50),
trans(50,not_in([/,p,t,y,yn]),1),
trans(51,/,67),
trans(51,in([p,t,y,yn]),51),
trans(51,not_in([/,p,t,y,yn]),1),
trans(52,/,68),
trans(52,in([p,t,y,yn]),52),
trans(52,not_in([/,p,t,y,yn]),1),
trans(53,/,69),
trans(53,in([p,t,y,yn]),53),
trans(53,not_in([/,p,t,y,yn]),1),
trans(54,/,70),
trans(54,in([p,t,y,yn]),54),
trans(54,not_in([/,p,t,y,yn]),1),
trans(55,/,71),
trans(55,in([p,t,y,yn]),55),
trans(55,not_in([/,p,t,y,yn]),1),
trans(56,/,72),
trans(56,in([p,t,y,yn]),56),
trans(56,not_in([/,p,t,y,yn]),1),
trans(57,/,73),
trans(57,in([p,t,y,yn]),57),
trans(57,not_in([/,p,t,y,yn]),1),
trans(58,/,74),
trans(58,in([p,t,y,yn]),58),
trans(58,not_in([/,p,t,y,yn]),1),
trans(59,/,75),
trans(59,in([p,t,y,yn]),59),
trans(59,not_in([/,p,t,y,yn]),1),
trans(60,/,76),
trans(60,in([p,t,y,yn]),60),
trans(60,not_in([/,p,t,y,yn]),1),
trans(61,#,20),
trans(61,gt,8),
trans(61,lte,45),
trans(61,n_f,77),
trans(61,not_in([#,gt,lte,n_f]),1),
trans(62,#,78),
trans(62,not_in([#]),1),
trans(63,#,78),
trans(63,gt,46),
trans(63,lte,47),
trans(63,not_in([#,gt,lte]),1),
trans(64,#,79),
trans(64,not_in([#]),1),
trans(65,#,79),
trans(65,gt,48),
trans(65,lte,49),
trans(65,not_in([#,gt,lte]),1),
trans(66,#,20),
trans(66,gt,8),
trans(66,lte,50),
trans(66,m_f,80),
trans(66,not_in([#,gt,lte,m_f]),1),
trans(67,lte,51),
trans(67,m_f,20),
trans(67,n_f,79),
trans(67,not_in([lte,m_f,n_f]),1),
trans(68,lte,52),
trans(68,m_f,81),
trans(68,not_in([lte,m_f]),1),
trans(69,lte,53),
trans(69,m_f,77),
trans(69,not_in([lte,m_f]),1),
trans(70,#,82),
trans(70,not_in([#]),1),
trans(71,#,82),
trans(71,gt,54),
trans(71,lte,55),
trans(71,not_in([#,gt,lte]),1),
trans(72,lte,56),
trans(72,m_f,78),
trans(72,n_f,20),
trans(72,not_in([lte,m_f,n_f]),1),
trans(73,lte,57),
trans(73,n_f,82),
trans(73,not_in([lte,n_f]),1),
trans(74,lte,58),
trans(74,n_f,80),
trans(74,not_in([lte,n_f]),1),
trans(75,#,81),
trans(75,not_in([#]),1),
trans(76,#,81),
trans(76,gt,59),
trans(76,lte,60),
trans(76,not_in([#,gt,lte]),1),
trans(77,'|',83),
trans(77,not_in(['|']),1),
trans(78,'|',84),
trans(78,not_in(['|']),1),
trans(79,'|',85),
trans(79,not_in(['|']),1),
trans(80,'|',86),
trans(80,not_in(['|']),1),
trans(81,'|',87),
trans(81,not_in(['|']),1),
trans(82,'|',88),
trans(82,not_in(['|']),1),
trans(83,n_t,89),
trans(83,not_in([n_t]),1),
trans(84,m_t,90),
trans(84,not_in([m_t]),1),
trans(85,n_t,91),
trans(85,not_in([n_t]),1),
trans(86,m_t,89),
trans(86,not_in([m_t]),1),
trans(87,lte,92),
trans(87,not_in([lte]),1),
trans(88,lte,93),
trans(88,not_in([lte]),1),
trans(89,gt,8),
trans(89,lte,94),
trans(89,not_in([gt,lte]),1),
trans(90,lte,95),
trans(90,not_in([lte]),1),
trans(91,lte,96),
trans(91,not_in([lte]),1),
trans(92,x,95),
trans(92,not_in([x]),1),
trans(93,x,96),
trans(93,not_in([x]),1),
trans(94,/,97),
trans(94,in([p,t,y,yn]),94),
trans(94,not_in([/,p,t,y,yn]),1),
trans(95,/,98),
trans(95,in([p,t,y,yn]),95),
trans(95,not_in([/,p,t,y,yn]),1),
trans(96,/,99),
trans(96,in([p,t,y,yn]),96),
trans(96,not_in([/,p,t,y,yn]),1),
trans(97,#,20),
trans(97,gt,8),
trans(97,lte,94),
trans(97,not_in([#,gt,lte]),1),
trans(98,lte,95),
trans(98,n_f,20),
trans(98,not_in([lte,n_f]),1),
trans(99,lte,96),
trans(99,m_f,20),
trans(99,not_in([lte,m_f]),1),
trans(100,not_in([]),1),
trans(101,l25,2),
trans(102,l25,1)
], % end transitions
[]). % jumps

:- fsa_globals:fsa_global_set(regex,&(~(file(good_result)),file(bad_basis))).
:- dynamic current_state/6.
:- fsa_globals:fsa_global_set(v_angle,0.15).
